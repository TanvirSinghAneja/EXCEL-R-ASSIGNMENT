-- Q1	A

SELECT *
FROM EMPLOYEES;

SELECT EMPLOYEENUMBER,
		FIRSTNAME,
		LASTNAME
FROM EMPLOYEES
WHERE JOBTITLE='SALES REP'
AND REPORTSTO=1102;

-- B

SELECT *
FROM PRODUCTS;

SELECT DISTINCT(PRODUCTLINE)
FROM PRODUCTS
WHERE PRODUCTLINE LIKE '%CARS';

-- Q2	A

SELECT *
FROM CUSTOMERS;

SELECT CUSTOMERNUMBER,
		CUSTOMERNAME,
        (CASE
			WHEN COUNTRY IN ('USA','CANADA')
            THEN 'NORTH AMERICA'
			WHEN COUNTRY IN ('UK','FRANCE','GERMANY')
            THEN 'EUROPE'
            ELSE
            'OTHERS'
		END) AS CUSTOMER_SEGMENT
FROM CUSTOMERS;

-- Q3 A

SELECT *
FROM ORDERDETAILS;

SELECT PRODUCTCODE,
		SUM(QUANTITYORDERED) AS TOTAL_QTY
FROM ORDERDETAILS
GROUP BY PRODUCTCODE
ORDER BY TOTAL_QTY DESC
LIMIT 10;

-- B

SELECT *
FROM PAYMENTS;

SELECT DISTINCT(MONTHNAME(PAYMENTDATE)) AS MONTHS,
		COUNT(AMOUNT) AS AMOUNTS
FROM PAYMENTS
GROUP BY MONTHS
HAVING AMOUNTS>20
ORDER BY AMOUNTS DESC;

-- Q4 A

CREATE DATABASE CUSTOMER_ORDERS;

CREATE TABLE CUSTOMERS
	(CUSTOMER_ID INT PRIMARY KEY AUTO_INCREMENT,
     FIRST_NAME VARCHAR(50) NOT NULL,
     LAST_NAME VARCHAR(50) NOT NULL,
     EMAIL VARCHAR(255) UNIQUE,
     PHONE_NUMBER VARCHAR(20));
     
SELECT *
FROM CUSTOMERS;

-- B

CREATE TABLE ORDERS
	(ORDER_ID INT PRIMARY KEY AUTO_INCREMENT,
     CUSTOMER_ID INT ,
     ORDER_DATE DATE,
     TOTAL_AMOUNT DECIMAL(10,2) CHECK(TOTAL_AMOUNT>0),
     FOREIGN KEY(CUSTOMER_ID) REFERENCES CUSTOMERS(CUSTOMER_ID));

-- Q5 A

SELECT *
FROM CUSTOMERS;

SELECT *
FROM ORDERS;

SELECT DISTINCT(COUNTRY),
		COUNT(ORDERNUMBER) AS ORDER_COUNT
FROM CUSTOMERS AS C
JOIN ORDERS AS O
	ON C.CUSTOMERNUMBER=O.CUSTOMERNUMBER
GROUP BY COUNTRY
ORDER BY ORDER_COUNT DESC
LIMIT 5;

-- Q6 A

CREATE TABLE PROJECT
	(EMPLOYEE_ID INT PRIMARY KEY AUTO_INCREMENT,
     FULLNAME VARCHAR(50),
     GENDER VARCHAR(10) CHECK(GENDER IN ('MALE','FEMALE')),
     MANAGER_ID INT);
     
INSERT INTO PROJECT(FULLNAME,GENDER,MANAGER_ID)
VALUES ('PRANAYA','MALE',3),
		('PRIYANKA','FEMALE',1),
        ('PREETY','FEMALE',NULL),
        ('ANURAG','MALE',1),
        ('SAMBIT','MALE',1),
        ('RAJESH','MALE',3),
        ('HINA','FEMALE',3);
        
SELECT *
FROM PROJECT;

SELECT P2.FULLNAME AS MANAGER_NAME,
		P1.FULLNAME AS EMPLOYEE_NAME
FROM PROJECT AS P1
JOIN PROJECT AS P2
	ON P1.MANAGER_ID=P2.EMPLOYEE_ID
ORDER BY MANAGER_NAME;

-- Q7 A

CREATE TABLE FACILITY
	(FACILITY_ID INT NOT NULL,
     NAME VARCHAR(100),
     STATE VARCHAR(100),
     COUNTRY VARCHAR(100));

-- i

ALTER TABLE FACILITY
MODIFY COLUMN FACILITY_ID
INT NOT NULL PRIMARY KEY AUTO_INCREMENT;

-- ii

ALTER TABLE FACILITY
ADD COLUMN CITY VARCHAR(100) NOT NULL;

-- Q8 A

SELECT *
FROM PRODUCTS;
SELECT *
FROM ORDERS;
SELECT *
FROM ORDERDETAILS;
SELECT *
FROM PRODUCTLINES;

CREATE VIEW PRODUCT_CATEGORY_SALES AS
(SELECT P1.PRODUCTLINE AS PRODUCTLINE,
	SUM(O.QUANTITYORDERED*O.PRICEEACH) AS TOTAL_SALES,
    COUNT(DISTINCT(ORDERNUMBER)) AS NUMBER_OF_ORDERS
FROM PRODUCTLINES AS P1
JOIN PRODUCTS AS P2
	ON P1.PRODUCTLINE=P2.PRODUCTLINE
JOIN ORDERDETAILS AS O
	ON P2.PRODUCTCODE=O.PRODUCTCODE
GROUP BY P1.PRODUCTLINE);

SELECT *
FROM PRODUCT_CATEGORY_SALES;

-- Q9 A

SELECT * 
FROM CUSTOMERS;
SELECT *
FROM PAYMENTS;

DELIMITER //
CREATE PROCEDURE PAYMENT_REPORT
				(IN YEARS INT,
				IN COUNTRY_NAME VARCHAR(50))
BEGIN
	SELECT 
		YEAR(P.PAYMENTDATE) AS `YEAR`,
        C.COUNTRY,
		CONCAT(FORMAT(ROUND(SUM(AMOUNT),0)/1000,0),' K') AS TOTAL_AMOUNT
	FROM PAYMENTS AS P
	JOIN CUSTOMERS AS C
		ON P.CUSTOMERNUMBER=C.CUSTOMERNUMBER
	WHERE YEAR(P.PAYMENTDATE)=YEARS
	AND C.COUNTRY=COUNTRY_NAME
    GROUP BY YEAR(P.PAYMENTDATE),C.COUNTRY;
END //
DELIMITER ;

CALL PAYMENT_REPORT('2003','FRANCE');

-- Q10 A

SELECT *
FROM CUSTOMERS;
SELECT *
FROM ORDERS;

WITH CTE AS
(SELECT CUSTOMERNAME,
	COUNT(ORDERNUMBER) AS ORDER_COUNT
FROM CUSTOMERS AS C
JOIN ORDERS AS O
	ON C.CUSTOMERNUMBER=O.CUSTOMERNUMBER
GROUP BY CUSTOMERNAME)
SELECT *,
		DENSE_RANK() OVER(ORDER BY ORDER_COUNT DESC) AS ORDER_FREQUECNY_RISK
FROM CTE;

-- B

SELECT *
FROM ORDERS;

WITH CTE AS
(SELECT YEAR(ORDERDATE) AS YEAR,
		MONTHNAME(ORDERDATE) AS MONTH,
        MONTH(ORDERDATE) AS MNTH,
        COUNT(ORDERNUMBER) TOTAL_ORDER
FROM ORDERS
GROUP BY YEAR,MONTH,MNTH
ORDER BY YEAR,MNTH),
CTE2 AS
(SELECT *,
		LAG(TOTAL_ORDER,1) OVER() AS PREVIOUS
FROM CTE)
SELECT YEAR,MONTH,TOTAL_ORDER,
		CONCAT(round((TOTAL_ORDER-PREVIOUS)/PREVIOUS*100,0),' %')
FROM CTE2;

-- 11 A

SELECT DISTINCT(productLine),
		COUNT(*) AS TOTAL
FROM PRODUCTS
WHERE BUYPRICE>(SELECT AVG(BUYPRICE)
				FROM PRODUCTS)
GROUP BY PRODUCTLINE
ORDER BY TOTAL DESC;

-- Q12

CREATE TABLE EMP_EH
	(EMPID INT PRIMARY KEY,
     EMPNAME VARCHAR(100),
     EMAILADDRESS VARCHAR(100));

DELIMITER //
CREATE PROCEDURE EMP_EH_IN(	
							IN EMPID_IN INT,
                            IN EMPNAME_IN VARCHAR(100),
                            IN EMAILADDRESS_IN VARCHAR(100))
		BEGIN
				DECLARE EXIT HANDLER FOR SQLEXCEPTION
                BEGIN
						SELECT 'ERROR OCCURED';
				END;
                INSERT INTO EMP_EH(EMPID,EMPNAME,EMAILADDRESS)
                VALUES(EMPID_IN,EMPNAME_INE,EMAILADDRESS_IN);
        END //
DELIMITER ;

-- Q 13

CREATE TABLE EMP_BIT
		(NAME VARCHAR(100),
		 OCCUPATION VARCHAR(100),
         WORKING_DATE DATE,
         WORKING_HOURS INT);

INSERT INTO EMP_BIT 
VALUES ('ROBIN','SCIENTIST','2020-10-04',12),
		('WARNER','ENGINEER','2020-10-04',10),
        ('PETER','ACTOR','2020-10-04',13),
        ('MARCO','DOCTOR','2020-10-04',14),
        ('BARYDEN','TEACHER','2020-10-04',12),
        ('ANTONIO','BUISNESS','2020-10-04',11);

SELECT *
FROM EMP_BIT;

INSERT INTO EMP_BIT
VALUES('ABC','DA','2020-10-04',-12);

-- TRIGGER CREATED 
CREATE DEFINER=`root`@`localhost` TRIGGER `emp_bit_BEFORE_INSERT` BEFORE INSERT ON `emp_bit` FOR EACH ROW BEGIN
IF 
	NEW.WORKING_HOURS<0 THEN
	SET NEW.WORKING_HOURS=-NEW.WORKING_HOURS;
END IF ;
END
